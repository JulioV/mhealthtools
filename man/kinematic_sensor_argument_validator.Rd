% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensors.R
\name{kinematic_sensor_argument_validator}
\alias{kinematic_sensor_argument_validator}
\title{Ensure the kinematic sensor arguments are well formed}
\usage{
kinematic_sensor_argument_validator(sensor_data, time_filter, detrend,
  sampling_rate, frequency_filter, IMF, window_length, window_overlap,
  derived_kinematics, funs, models)
}
\arguments{
\item{sensor_data}{An \code{n} x 4 data frame with column names \code{t}, \code{x},
\code{y}, \code{z} containing gyroscope measurements. Here \code{n} is the
total number of measurements, \code{t} is the timestamp of each measurement, and
\code{x}, \code{y} and \code{z} are linear velocity measurements.}

\item{time_filter}{A length 2 numeric vector specifying the time range 
of measurements to use during preprocessing and feature extraction after
normalizing the first timestamp to 0. A \code{NULL} value means do not 
filter any measurements.}

\item{detrend}{Whether to detrend the signal.}

\item{sampling_rate}{Sampling rate of \code{sensor_data}.}

\item{frequency_filter}{A length 2 numeric vector specifying the frequency range
of the signal (in hertz) to use during preprocessing and feature extraction.
A \code{NULL} value means do not filter frequencies.}

\item{IMF}{The number of IMFs used during an empirical mode decomposition
transformation. The default value of 1 means do not apply EMD to the signal.}

\item{window_length}{Length of the sliding window used during the windowing 
transformation. Both \code{window_length} and \code{window_overlap} must be
set for the windowing transformation to be applied.}

\item{window_overlap}{Window overlap used during the windowing transformation.
Both \code{window_length} and \code{window_overlap} must be set for the
windowing transformation to be applied.}

\item{derived_kinematics}{Whether to add columns for \code{jerk}, \code{velocity},
and \code{displacement} before extracting features.}

\item{funs}{A function or list of feature extraction functions that each
accept a single numeric vector as input. Each function should return a 
dataframe of features (normally a single-row datafame). The input vectors
will be the axial measurements from \code{sensor_data} after the transform
defined by the above parameters has been applied. If no argument
is supplied to either \code{funs} or \code{models}, a default set
of feature extraction functions (as described in \code{default_kinematic_features})
will be supplied for this parameter.}

\item{models}{A list of functions, each of which accepts
\code{sensor_data} as input after the transform defined by the above 
parameters has been applied and returns features. Useful for models
which compute individual features using multiple input variables.}
}
\value{
A list of gyroscope features. The output from \code{funs} will
be stored under \code{$extracted_features} and the output from \code{models}
will be stored under \code{$model_features}. If there is an error during
extraction, the returned result will be stored under \code{$error}.
}
\description{
Verify that the arguments passed to \code{accelerometer_features} and
\code{gyroscope_features} are valid.
}
